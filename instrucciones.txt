Capítulo IV
Instrucciones generales
• Tu proyecto deberá estar escrito en C.
• Tu proyecto debe estar escrito siguiendo la Norma. Si tienes archivos o funciones
adicionales, estas están incluidas en la verificación de la Norma y tendrás un 0 si
hay algún error de norma en cualquiera de ellos.
• Tus funciones no deben terminar de forma inesperada (segfault, bus error, double
free, etc) excepto en el caso de comportamientos indefinidos. Si esto sucede, tu
proyecto será considerado no funcional y recibirás un 0 durante la evaluación.
• Toda la memoria asignada en el heap deberá liberarse adecuadamente cuando sea
necesario. No se permitirán leaks de memoria.
• Si el enunciado lo requiere, deberás entregar un Makefile que compilará tus archivos
fuente al output requerido con las flags -Wall, -Werror y -Wextra, utilizar cc y
por supuesto tu Makefile no debe hacer relink.
• Tu Makefile debe contener al menos las normas $(NAME), all, clean, fclean y
re.
• Para entregar los bonus de tu proyecto deberás incluir una regla bonus en tu
Makefile, en la que añadirás todos los headers, librerías o funciones que estén
prohibidas en la parte principal del proyecto. Los bonus deben estar en archivos
distintos _bonus.{c/h}. La parte obligatoria y los bonus se evalúan por separado.
• Si tu proyecto permite el uso de la libft, deberás copiar su fuente y sus Makefile
asociados en un directorio libft con su correspondiente Makefile. El Makefile
de tu proyecto debe compilar primero la librería utilizando su Makefile, y después
compilar el proyecto.
• Te recomendamos crear programas de prueba para tu proyecto, aunque este trabajo
no será entregado ni evaluado. Te dará la oportunidad de verificar que tu
programa funciona correctamente durante tu evaluación y la de otros compañeros.
Y sí, tienes permitido utilizar estas pruebas durante tu evaluación o la de otros
compañeros.
• Entrega tu trabajo en tu repositorio Git asignado. Solo el trabajo de tu repositorio
Git será evaluado. Si Deepthought evalúa tu trabajo, lo hará después de tus compañeros. Si se encuentra un error durante la evaluación de Deepthought, esta habrá
terminado.

Parte obligatoria
Nombre de pro-
grama
fractol
Archivos a entre-
gar
Makefile, *.h, *.c
Makefile all, clean, fclean, re, bonus
Argumentos El tipo de fractal a mostrar y cualquier otra
opción disponible
Funciones autor-
izadas • open, close, read, write,
malloc, free, perror,
strerror, exit
• Todas las funciones de la
librería de matemáticas (-lm
man 3 math)
• Todas las funciones de la
miniLibX
• ft_printf y cualquier función
equivalente que hayas escrito
Se permite usar
libft
Sí
Descripción El objetivo de este proyecto es crear un pequeño
programa de exploración de fractales.
Tu proyecto tendrá que seguir las siguientes reglas:
• Tienes que utilizar la miniLibX, ya sea la versión disponible en los ordenadores del
campus o la que instales usando sus fuentes originales.
• Tendrás que entregar un Makefile que compilará tus archivos fuente. No debe hacer
relink.
• Las variables globales están prohibidas.
V.1. Renderizado
• Tu programa debe ofrecer los conjuntos de Julia y Mandelbrot.
• La rueda del ratón hace zoom in y zoom out y lo hace casi infinitamente (dentro
de los límites del ordenador). Ese es el concepto de un fractal.
• Debes poder crear un conjunto de Julia diferente mediante los parámetros del pro-
grama.
• Un parámetro se pasará a través de la CLI para definir el tipo de fractal visualizado.
◦ Puedes usar más parámetros como opciones de renderizado.
◦ Si no se introduce un parámetro, o si el parámetro es inválido, el programa
mostrará una lista de parámetros disponibles y terminará correctamente.
• Debes usar al menos unos pocos colores para mostrar la profundidad de cada
fractal. Es incluso mejor si te adentras en los efectos psicodélicos.
V.2. Representación gráfica
• Tu programa tiene que mostrar la imagen en una ventana.
• El manejo de tu ventana debe ser fluido (cambio a otra ventana, minimización y
demás)
• ESC debe cerrar la ventana y salir del programa de manera limpia.
• Hacer click en la cruz del marco de la ventana debe cerrarla y cerrar el programa
de manera limpia.
• El uso de images de la MiniLibX es obligatorio.
8
Capítulo VI
Parte extra
Habitualmente, te animaríamos a que desarrollaras nuevas características extra. Sin
embargo, habrá proyectos gráficos mucho más interesantes más adelante. ¡Te están es-
perando! ¡No pierdas demasiado tiempo en este ejercicio!
Conseguirás algunos puntos extra con lo siguiente:
• Un fractal diferente más (hay más de cien referencias a distintos tipos de fractales
online).
• El zoom sigue la posición actual del ratón.
• Adicionalmente al zoom: moverse con flechas.
• Haz que el rango de color cambie.